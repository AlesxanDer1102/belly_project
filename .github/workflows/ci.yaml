name: CI Pipeline Python

on:
  push:
    branches: [main, master, develop, "feature/*"]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest behave
          pip install -r requirements.txt

      - name: Run pytest
        run: |
          pytest  -v --strict-markers

      - name: Run behave español
        id: behave-es
        continue-on-error: true
        run: |
          behave --junit --junit-directory=test-reports --tags=spanish features/ -v

      - name: Run behave ingles
        id: behave_en
        continue-on-error: true
        run: |
          behave --junit --junit-directory=test-reports --tags=english features/ -v

      - name: Run behave (pruebas con tiempos aleatorios)
        id: behave_random
        continue-on-error: true
        run: |
          export PYTHONHASHSEED=42
          behave --junit --junit-directory=test-reports --tags=random_time features/ -v

      - name: Run behave (todas las pruebas)
        id: behave_all
        continue-on-error: true
        run: |
          behave --junit --junit-directory=test-reports features/ -v
      - name: Run behave (pruebas de validación)
        id: behave_validacion
        continue-on-error: true
        run: |
          behave --junit --junit-directory=test-reports --tags=validacion features/ -v
          
      - name: Verificar manejo de excepciones
        run: |
          if grep -q "Error por cantidad excesiva detectado correctamente" test-reports/TESTS-belly.xml; then
            echo "✅ Las validaciones funcionan correctamente"
          else
            echo "❌ Las validaciones no están funcionando como se esperaba"
            exit 1
          fi

      - name: Generate test reports
        if: always()
        run: |
          mkdir -p test-reports

      - name: Check test results
        if: always()
        run: |
          echo "Resultados de las pruebas:"
          echo "- pytest: ${{ steps.pytest.outcome }}"
          echo "- behave (español): ${{ steps.behave_es.outcome }}"
          echo "- behave (inglés): ${{ steps.behave_en.outcome }}"
          echo "- behave (todas): ${{ steps.behave_all.outcome }}"

          # Falla el build si alguna prueba falló
          if [[ "${{ steps.pytest.outcome }}" == "failure" || "${{ steps.behave_all.outcome }}" == "failure" ]]; then
            echo "::error::Algunas pruebas han fallado"
            exit 1
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-reports/
